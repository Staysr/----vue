{"remainingRequest":"/Users/admin/Desktop/bilibili/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/admin/Desktop/bilibili/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/admin/Desktop/bilibili/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/bilibili/src/components/Search.vue?vue&type=template&id=7cb41050&scoped=true&","dependencies":[{"path":"/Users/admin/Desktop/bilibili/src/components/Search.vue","mtime":1632559753222},{"path":"/Users/admin/Desktop/bilibili/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/bilibili/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/admin/Desktop/bilibili/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/bilibili/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}